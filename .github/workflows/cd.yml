name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    name: Deploy to Kubernetes
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source that triggered CI
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.workflow_run.repository.full_name }}
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Set kubeconfig
        run: |
          echo "$KUBE_CONFIG" > kubeconfig
          echo "KUBECONFIG written"
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Debug workspace contents
        run: |
          echo "Repository: ${{ github.event.workflow_run.repository.full_name }}"
          echo "Head branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Head SHA: ${{ github.event.workflow_run.head_sha }}"
          echo "Workspace: $GITHUB_WORKSPACE"
          pwd
          git rev-parse --abbrev-ref HEAD || true
          git rev-parse HEAD || true
          ls -la
          echo "List k8s dir:" && ls -la k8s || true
          echo "List k8s files via git:" && git ls-tree --name-only -r HEAD | grep '^k8s/' || true

      - name: Ensure k8s manifests present
        run: |
          if [ ! -d k8s ]; then
            echo "ERROR: k8s directory is missing in this commit." >&2
            exit 1
          fi
          if [ ! -f k8s/namespace.yaml ]; then
            echo "WARNING: k8s/namespace.yaml not found; listing k8s/ to help debug:" >&2
            ls -la k8s
          fi

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          # Apply the entire directory to avoid per-file path drift
          kubectl apply -f k8s/

      - name: Verify rollout
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n task-manager rollout status deploy/backend --timeout=120s || exit 1
          kubectl -n task-manager rollout status deploy/frontend --timeout=120s || exit 1

      - name: Notify Telegram (success)
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Deployment successful
            Repo: ${{ github.repository }}
            Commit: ${{ github.sha }}
            Actor: ${{ github.actor }}
            Environment: Kubernetes (task-manager)

  notify-failure:
    name: Notify Failure
    if: ${{ github.event.workflow_run.conclusion != 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (failure)
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Deployment failed
            Repo: ${{ github.repository }}
            CI Conclusion: ${{ github.event.workflow_run.conclusion }}
            Actor: ${{ github.actor }}
            Check CI logs for details.
