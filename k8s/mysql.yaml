apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: task-manager
stringData:
  MYSQL_ROOT_PASSWORD: password
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: task-manager
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
    - name: mysql
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: task-manager
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              value: my_db
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-init
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: mysql-init
          configMap:
            name: mysql-init-sql
  volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-sql
  namespace: task-manager
data:
  init.sql: |-
    CREATE TABLE IF NOT EXISTS users (
        id int primary key AUTO_INCREMENT,
        nickname varchar(255) not null,
        password varchar(255) not null,
        email varchar(255) unique not null,
        active timestamp
    );

    CREATE TABLE IF NOT EXISTS tasks (
        task_id int primary key AUTO_INCREMENT,
        user_id int not null,
        task_body varchar(255) not null,
        is_task_done bool not null,
        task_deadline datetime,
        foreign key (user_id) references users (id)
    );
